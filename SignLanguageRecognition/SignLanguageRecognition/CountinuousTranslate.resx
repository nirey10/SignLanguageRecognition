<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="StartListeningBtn.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        hQAAAABJRU5ErkJggg==
</value>
  </data>
</root>